{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Odyssey\\\\Documents\\\\GitHub\\\\squads\\\\LastFM-react-web-client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Odyssey\\\\Documents\\\\GitHub\\\\squads\\\\LastFM-react-web-client\\\\src\\\\Components\\\\Artists.js\";\nimport React from 'react';\nimport Albums from './Albums';\nimport Search from './Search';\nimport { apiKey } from '../api_key.js';\nimport faker from 'faker';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nfunction Artists() {\n  // state = {\n  //   albums: undefined,\n  //   showResults: this.props.showResults == false ? false : true,\n  //   error: this.props.error,\n  // };\n  // back = () => {\n  //   this.setState({\n  //     showResults: true,\n  //   });\n  // };\n  // gettingAlbums = async (e) => {\n  //   e.preventDefault();\n  //   const artist = e.target.innerHTML;\n  //   if (artist) {\n  //     const api_url = await fetch(\n  //       `http://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=${artist}&api_key=${apiKey}&format=json`\n  //     );\n  //     const data = await api_url.json();\n  //     this.setState({\n  //       albums: data.topalbums.album,\n  //       showResults: this.props.showResults,\n  //     });\n  //   }\n  // };\n  const data = new Array(1000).fill().map((value, id) => ({\n    id: id,\n    title: faker.lorem.words(5),\n    body: faker.lorem.sentences(8)\n  }));\n\n  const _useState = useState({\n    prev: 0,\n    next: 10\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        count = _useState2[0],\n        setCount = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        hasMore = _useState4[0],\n        setHasMore = _useState4[1];\n\n  const _useState5 = useState(data.slice(count.prev, count.next)),\n        _useState6 = _slicedToArray(_useState5, 2),\n        current = _useState6[0],\n        setCurrent = _useState6[1];\n\n  const getMoreData = () => {\n    if (current.length === data.length) {\n      setHasMore(false);\n      return;\n    }\n\n    setTimeout(() => {\n      setCurrent(current.concat(data.slice(count.prev + 10, count.next + 10)));\n    }, 2000);\n    setCount(prevState => ({\n      prev: prevState.prev + 10,\n      next: prevState.next + 10\n    }));\n  }; // render() {\n\n\n  return React.createElement(InfiniteScroll, {\n    dataLength: current.length,\n    next: getMoreData,\n    hasMore: hasMore,\n    loader: React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Loading...\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, current && current.map((item, index) => React.createElement(\"div\", {\n    key: index,\n    className: \"post\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"\".concat(item.title, \"-\").concat(item.id)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, item.body))))) // <div>\n  //   {this.props.artist && this.state.showResults ? (\n  //     <div className=\"artists\">\n  //       <ul>\n  //         {this.props.artist.map((place, index) => (\n  //           <li>\n  //             <button\n  //               className=\"btn btn-info mt-1 mb-1\"\n  //               key={index}\n  //               onClick={this.gettingAlbums}\n  //             >\n  //               {place.name}\n  //             </button>\n  //           </li>\n  //         ))}\n  //         <Albums albums={this.state.albums} />\n  //       </ul>\n  //     </div>\n  //   ) : this.props.artist ? (\n  //     <div>\n  //       <button onClick={this.back} className=\"btn btn-primary ml-4\">\n  //         Voltar para pesquisar\n  //       </button>\n  //       <Albums albums={this.state.albums} />\n  //     </div>\n  //   ) : this.props.error != undefined ? (\n  //     <div className=\"alert alert-danger\">{this.props.error}</div>\n  //   ) : (\n  //     ''\n  //   )}\n  // </div>\n  ; // }\n}\n\nexport default Artists;","map":{"version":3,"sources":["C:\\Users\\Odyssey\\Documents\\GitHub\\squads\\LastFM-react-web-client\\src\\Components\\Artists.js"],"names":["React","Albums","Search","apiKey","faker","InfiniteScroll","Artists","data","Array","fill","map","value","id","title","lorem","words","body","sentences","useState","prev","next","count","setCount","hasMore","setHasMore","slice","current","setCurrent","getMoreData","length","setTimeout","concat","prevState","item","index"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Albums from './Albums';\r\nimport Search from './Search';\r\nimport { apiKey } from '../api_key.js';\r\nimport faker from 'faker';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\nfunction Artists() {\r\n  // state = {\r\n  //   albums: undefined,\r\n  //   showResults: this.props.showResults == false ? false : true,\r\n  //   error: this.props.error,\r\n  // };\r\n  // back = () => {\r\n  //   this.setState({\r\n  //     showResults: true,\r\n  //   });\r\n  // };\r\n  // gettingAlbums = async (e) => {\r\n  //   e.preventDefault();\r\n  //   const artist = e.target.innerHTML;\r\n  //   if (artist) {\r\n  //     const api_url = await fetch(\r\n  //       `http://ws.audioscrobbler.com/2.0/?method=artist.gettopalbums&artist=${artist}&api_key=${apiKey}&format=json`\r\n  //     );\r\n  //     const data = await api_url.json();\r\n  //     this.setState({\r\n  //       albums: data.topalbums.album,\r\n  //       showResults: this.props.showResults,\r\n  //     });\r\n  //   }\r\n  // };\r\n  const data = new Array(1000).fill().map((value, id) => ({\r\n    id: id,\r\n    title: faker.lorem.words(5),\r\n    body: faker.lorem.sentences(8),\r\n  }));\r\n\r\n  const [count, setCount] = useState({\r\n    prev: 0,\r\n    next: 10,\r\n  });\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [current, setCurrent] = useState(data.slice(count.prev, count.next));\r\n  const getMoreData = () => {\r\n    if (current.length === data.length) {\r\n      setHasMore(false);\r\n      return;\r\n    }\r\n    setTimeout(() => {\r\n      setCurrent(current.concat(data.slice(count.prev + 10, count.next + 10)));\r\n    }, 2000);\r\n    setCount((prevState) => ({\r\n      prev: prevState.prev + 10,\r\n      next: prevState.next + 10,\r\n    }));\r\n  };\r\n  // render() {\r\n  return (\r\n    <InfiniteScroll\r\n      dataLength={current.length}\r\n      next={getMoreData}\r\n      hasMore={hasMore}\r\n      loader={<h4>Loading...</h4>}\r\n    >\r\n      <div>\r\n        {current &&\r\n          current.map((item, index) => (\r\n            <div key={index} className=\"post\">\r\n              <h3>{`${item.title}-${item.id}`}</h3>\r\n              <p>{item.body}</p>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </InfiniteScroll>\r\n\r\n    // <div>\r\n    //   {this.props.artist && this.state.showResults ? (\r\n    //     <div className=\"artists\">\r\n    //       <ul>\r\n    //         {this.props.artist.map((place, index) => (\r\n    //           <li>\r\n    //             <button\r\n    //               className=\"btn btn-info mt-1 mb-1\"\r\n    //               key={index}\r\n    //               onClick={this.gettingAlbums}\r\n    //             >\r\n    //               {place.name}\r\n    //             </button>\r\n    //           </li>\r\n    //         ))}\r\n\r\n    //         <Albums albums={this.state.albums} />\r\n    //       </ul>\r\n    //     </div>\r\n    //   ) : this.props.artist ? (\r\n    //     <div>\r\n    //       <button onClick={this.back} className=\"btn btn-primary ml-4\">\r\n    //         Voltar para pesquisar\r\n    //       </button>\r\n    //       <Albums albums={this.state.albums} />\r\n    //     </div>\r\n    //   ) : this.props.error != undefined ? (\r\n    //     <div className=\"alert alert-danger\">{this.props.error}</div>\r\n    //   ) : (\r\n    //     ''\r\n    //   )}\r\n    // </div>\r\n  );\r\n  // }\r\n}\r\n\r\nexport default Artists;\r\n"]},"metadata":{},"sourceType":"module"}